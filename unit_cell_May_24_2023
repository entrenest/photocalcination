import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# Define the unit cell parameters
a = 3.83002900
b = 5.12298211
c = 6.64126584
alpha = 95.21131059
beta = 105.68559479
gamma = 90.60130008

# Create a unit cell array
unit_cell = np.array([
    [a, 0, 0],
    [0, b, 0],
    [0, 0, c],
])

# Define the atomic positions
atom_positions = np.array([
    [0.60863600, 0.31460600, 0.25769300],  # Calcium 1
    [0.39136400, 0.68539400, 0.74230700],  # Calcium 2
    [0.98461400, 0.20670600, 0.75426900],  # Carbon
    [0.01538600, 0.79329400, 0.24573100],  # Carbon
    [0.80721500, 0.38244400, 0.63892200],  # Oxygen 1
    [0.19278500, 0.61755600, 0.36107800],  # Oxygen 2
    [0.88055900, 0.96238400, 0.71821900],  # Oxygen 3
    [0.11944100, 0.03761600, 0.28178100],  # Oxygen 4
    [0.27644500, 0.28522400, 0.89797100],  # Oxygen 5
    [0.72355500, 0.71477600, 0.10202900],  # Oxygen 6
])

# Define colors for each chemical
chemical_colors = {
    'Ca': 'red',
    'C': 'gray',
    'O': 'blue'
}

# Define angles and zoom levels for multiple plots
plot_configurations = [
    {'elev': 10, 'azim': -20, 'zoom_factor': 0.8},
    {'elev': 30, 'azim': 30, 'zoom_factor': 0.8},
    {'elev': 60, 'azim': 120, 'zoom_factor': 0.8}
]

# Generate multiple plots
for i, config in enumerate(plot_configurations):
    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')

    # Plot unit cell vectors
    for vec in unit_cell:
        ax.plot([0, vec[0]], [0, vec[1]], [0, vec[2]], 'k-')

    # Plot atom positions with respective colors
    for j, pos in enumerate(atom_positions):
        if j < 2:
            chemical = 'Ca'
        elif j < 4:
            chemical = 'C'
        else:
            chemical = 'O'
        color = chemical_colors[chemical]
        ax.scatter(pos[0], pos[1], pos[2], c=color, s=200, label=chemical)

    # Set plot labels
    ax.set_xlabel('X')
    ax.set_ylabel('Y')
    ax.set_zlabel('Z')

    # Set plot limits and zoom level
    zoom_factor = config['zoom_factor']
    ax.set_xlim([0, a * zoom_factor])
    ax.set_ylim([0, b * zoom_factor])
    ax.set_zlim([0, c * zoom_factor])

    # Set plot view angles
    ax.view_init(elev=config['elev'], azim=config['azim'])

    # Show legend
    ax.legend()

    # Set plot title
    title = f'Plot {i+1}'
    ax.set_title(title)

    # Show the plot
    plt.show()
